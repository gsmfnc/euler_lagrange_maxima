declare(q, scalar)$
declare(D, scalar)$
declare(L, scalar)$
declare(e, scalar)$

kinova : matrix(
    [q[1],  D[1],      %pi/2,     0],
    [q[2],  0,         %pi,       D[2]],
    [q[3],  -e[2],     %pi/2,     0],
    [q[4],  D[3]+D[4], %pi,       0]
)$
test_denavit_hartenberg(kinova)$

/*
cartesiano : matrix(
    [0, q[1], -%pi/2, 0],
    [-%pi/2, q[2], -%pi/2, 0],
    [0, q[3], 0, 0]
)$
test_denavit_hartenberg(cartesiano)$

threedof : matrix(
    [q[1], 0, 0, L[1]],
    [q[2], 0, 0, L[2]],
    [q[3], 0, 0, L[3]]
)$
test_denavit_hartenberg(threedof)$

cilindrico : matrix(
    [q[1], L[1], 0, 0],
    [0, q[2], -%pi/2, 0],
    [0, q[3], 0, 0]
)$
test_denavit_hartenberg(cilindrico)$

scara : matrix(
    [q[1], L[1], 0, D[1]],
    [q[2], L[2], %pi, D[2]],
    [0, q[3], 0, 0]
)$
test_denavit_hartenberg(scara)$

sferico : matrix(
    [q[1], L[1], %pi/2, 0],
    [q[2], 0, %pi/2, L[2]],
    [0, q[3], 0, 0]
)$
test_denavit_hartenberg(sferico)$

sfericostanford : matrix(
    [q[1], L[1], -%pi/2, 0],
    [q[2], L[2], %pi/2, 0],
    [0, q[3], 0, 0]
)$
test_denavit_hartenberg(sfericostanford)$

antropomorfo: matrix(
    [q[1], L[1], -%pi/2, 0],
    [q[2], 0, 0, L[2]],
    [q[3], 0, 0, L[3]]
)$
test_denavit_hartenberg(antropomorfo)$

polsosferico: matrix(
    [q[1], L[1], -%pi/2, 0],
    [q[2], 0, %pi/2, 0],
    [q[3], L[2], 0, 0]
)$
test_denavit_hartenberg(polsosferico)$
*/
